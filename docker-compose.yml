services: 
  web:
    container_name: funexpression
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "80:80"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - backend
    volumes:
      - ./funexpression:/funexpression
    env_file:
      .env
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./configs/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - backend
  download_worker:
    platform: linux/amd64
    container_name: download_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: download_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  conversion_worker:
    platform: linux/amd64
    container_name: conversion_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: conversion_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  trimming_worker:
    platform: linux/amd64
    container_name: trimming_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: trimming_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  genome_download_worker:
    platform: linux/amd64
    container_name: genome_download_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: genome_download_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  aligner_worker:
    platform: linux/amd64
    container_name: aligner_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: aligner_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  counter_worker:
    platform: linux/amd64
    container_name: counter_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: counter_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  diffed_worker:
    platform: linux/amd64
    container_name: diffed_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: differ_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  generate_index_genome_worker:
    platform: linux/amd64
    container_name: generate_index_genome_worker
    build:
      context: .
      dockerfile: Dockerfile
      target: generate_index_genome_worker
    depends_on:
      - web
    volumes:
      - ./funexpression:/funexpression
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - backend
  mongo:
    image: mongo
    container_name: mongo-database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - backend
networks:
    backend:
      driver: bridge
